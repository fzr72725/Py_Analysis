201707:
Python note:
1. List comprehension:
result = [x+10 for x in my_list]

a = list('abcdefghijklmnopqrstuvwxyz')
b = list('phqgiumeaylnofdxjkrcvstzwb')
d = {x:y for x,y in zip(a,b)}

2. File operation:
my_file = open('hello.txt')
t = my_file.read()

# function strip is to remove \n
[l.strip() for l in my_file]

3. word/letter counter:
from collections import Counter
c = Counter(content)
* output is a dictionary

4. Set:
my_set = set(content)
* set is to have a unique element collection

5. Dictionary:
my_dict = dict((key,0) for key in my_set)

6. Other operation:
m += 1

string.lower()

function join is to turn a list into a string connected with specific char('' is no connector)
''.join(list)

print [x for x in range (1,5)]
*[1, 2, 3, 4]

print [i for i in range(8, 0, -1)]
[8, 7, 6, 5, 4, 3, 2, 1]

print range(5,-1,-1)
[5, 4, 3, 2, 1, 0]

Algorithm note:
1. Sorting:
* total number of value comparison and position exchange determine the efficiency of a sorting algo.
1) Bubble sort
def bubbleSort(alist):
    for passnum in range(len(alist)-1,0,-1):
        for i in range(passnum):
            if alist[i]>alist[i+1]:
                alist[i],alist[i+1] = alist[i+1],alist[i]
    return alist

2) Selection sort:
* Compare to bubble sort, selection sort reduce the exchange effort, each round, exchange only happen ONCE
* Each round, only the largest element is put to the last position of the list
def selectionSort(my_list):
    for index in range(len(my_list)-1,0,-1):
        largest = 0
        print index
        for idx in range(1,index+1):
            if my_list[idx]>my_list[largest]:
                largest = idx
        my_list[largest],my_list[index] = my_list[index],my_list[largest]
    return my_list
    
3) Insertion sort:
* O(n) = n**2
def insertionSort(my_list):
    for item in range(1,len(my_list)):
        for i in range(item-1,-1,-1):
            if my_list[i] > my_list[item]:
                my_list[i],my_list[item] = my_list[item],my_list[i]
                item = i
    return my_list



Statistics:
1. Permutation:
1) In general, n distinct objects can be arranged in n! ways.
2) The number of permutations of n distinct objects taken r at a time, Pnr=n*(n-1)*(n-2)...*(n-(r-1))
3) The number of different permutations of n objects of which n1 are of one kind, n2 are of a second kind, ... nk are of a k-th kind is n!/(n1!*n2!*...nk!)
4) There are \displaystyle{\left({n}-{1}\right)}!(n−1)! ways to arrange n distinct objects in a circle (where the clockwise and anti-clockwise arrangements are regarded as distinct.)

2. Combination:
1) Cnr=Pnr/r!
2) Cn0=Cnn=1
3) Cnr=Cn(n-r)

3. Probability terms:
1)Experiment: This is any process of observation or procedure that:

-Can be repeated (theoretically) an infinite number of times; and

-Has a well-defined set of possible outcomes.

2)Sample space: This is the set of all possible outcomes of an experiment.

3)Event: This is a subset of the sample space of an experiment.


4. Common probability problems:
1) Lottery odds:
http://www.intmath.com/counting-probability/singapore-toto.php
2) 

5. Conditional probability:
P(A|B): If A and B are two events, the probability that A occurs given that B has occurred
P(A|B)<student is French if he's female> = P(A⋂B)<student is French and female>/P(B)<student is female>

6. Independent probability:
P(A⋂B) = P(A)*P(B)

7. Other probability:
P(A or B) = P(A)+P(B)-P(A⋂B)

8. Bayes' Therom:
If E1 and E2 are mutually exclusive:
P(E1∣E)=P(E1⋂E)/[P(E2⋂E)+P(E1⋂E)]
